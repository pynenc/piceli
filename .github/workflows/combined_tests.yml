name: CombinedTests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"
      # Repeat common setup steps (like installing Poetry) for both jobs
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction
      - name: Run unit tests with coverage
        run: poetry run coverage run -m pytest tests/unit
      - run: poetry run coverage report
      - run: poetry run coverage html --show-contexts --title "Unit Test Coverage for ${{ github.sha }}"
      - name: Store unit test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-unit
          path: htmlcov
      - name: Store unit test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-unit
          path: .coverage

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"
      - name: Install Minikube and kubectl
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/
      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube update-context
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction
      - name: Run integration tests with coverage
        run: poetry run coverage run -m pytest tests/integration
      - run: poetry run coverage report
      - run: poetry run coverage html --show-contexts --title "Integration Test Coverage for ${{ github.sha }}"
      - name: Store integration test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-integration
          path: htmlcov
      - name: Store integration test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-integration
          path: .coverage

  all-tests-completed:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - run: poetry install --no-interaction
      - name: Download test coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          path: .
          merge-multiple: false
      # - name: Download unit test coverage data
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: coverage-data-unit
      #     path: ./coverage-data-unit
      # - name: Download integration test coverage data
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: coverage-data-integration
      #     path: ./coverage-data-integration
      - run: poetry run coverage combine coverage-data-unit/.coverage coverage-data-integration/.coverage
      - run: poetry run coverage html --show-contexts --title "Combined Test Coverage"
      - name: Store combined test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
